Sure! Continuing from where we left off:


---

9Ô∏è‚É£ src/components/LandingPage.jsx (continued)

export default function LandingPage() {
  const { setShowLogin } = useAuth();

  return (
    <div>
      {/* Hero Section */}
      <div className="hero">
        <h1>Multi-Tenant Payment Portal</h1>
        <p>Manage transactions, refunds, settlements, and payment settings across multiple tenants</p>
        <button className="btn" onClick={() => setShowLogin(true)}>Login</button>
      </div>

      {/* Feature Cards */}
      <div className="features">
        <div className="card">
          <h3>Transactions</h3>
          <p>View all tenant-specific transactions in real-time</p>
        </div>
        <div className="card">
          <h3>Refunds</h3>
          <p>Process and view refunds efficiently</p>
        </div>
        <div className="card">
          <h3>Settlements</h3>
          <p>Configure and monitor settlement preferences</p>
        </div>
        <div className="card">
          <h3>Tenant Management</h3>
          <p>Add new tenants and manage their users and preferences</p>
        </div>
      </div>

      {/* Footer */}
      <div className="footer">
        ¬© 2025 Multi-Tenant Payment Portal
      </div>
    </div>
  );
}


---

üîü src/components/Dashboard.jsx

import React from 'react';
import { useAuth } from '../context/AuthContext';

export default function Dashboard() {
  const { currentUser, currentTenantId, logout } = useAuth();

  return (
    <div style={{padding:'24px'}}>
      <header style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>
        <h2>Welcome, {currentUser?.name}</h2>
        {currentTenantId && <span style={{fontWeight:'600', fontSize:'1rem'}}>Tenant: {currentTenantId}</span>}
        <button className="btn" onClick={logout}>Logout</button>
      </header>

      <div style={{marginTop:'24px', display:'flex', gap:'24px', flexWrap:'wrap'}}>
        <div className="card">
          <h3>Transactions</h3>
          <p>View all transactions for your tenant.</p>
        </div>
        <div className="card">
          <h3>Refunds</h3>
          <p>View and manage refunds for your tenant.</p>
        </div>
        <div className="card">
          <h3>Settlements</h3>
          <p>Monitor settlements and configure preferences.</p>
        </div>
        {currentUser?.role === 'admin' && (
          <div className="card">
            <h3>Tenant Management</h3>
            <p>Add or manage tenants in the platform.</p>
          </div>
        )}
      </div>
    </div>
  );
}


---

1Ô∏è‚É£1Ô∏è‚É£ src/App.jsx

import React from 'react';
import { AuthProvider, useAuth } from './context/AuthContext';
import LandingPage from './components/LandingPage';
import Dashboard from './components/Dashboard';
import LoginModal from './components/LoginModal';

function AppContent() {
  const { currentUser, showLogin } = useAuth();
  return (
    <>
      {showLogin && <LoginModal />}
      {!currentUser ? <LandingPage /> : <Dashboard />}
    </>
  );
}

export default function App() {
  return (
    <AuthProvider>
      <AppContent />
    </AuthProvider>
  );
}


---

‚úÖ How to Run

1. Make sure dependencies are installed:



npm install

2. Start the development server:



npm start

3. Open in browser: http://localhost:3000


4. Test login (mock credentials):



Admin: username: admin / password: admin

Sony Music User: username: music-user / password: music

Sony Pictures User: username: pictures-user / password: pic


After login, you‚Äôll see the dashboard with tenant-specific info and card sections for transactions, refunds, settlements, and tenant management.


---

If you want, I can upgrade this further with:

Charts for transactions/refunds like Adyen portal

Smooth animations

Gradient buttons and hover effects

Better hero images/icons


This will make it almost like a production-ready Adyen-like portal visually.

Do you want me to do that next?

